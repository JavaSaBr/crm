
task pullAngularCliImage(type: Exec, group: 'Angular') {
    commandLine 'docker', 'pull', 'trion/ng-cli'
}

task installNodeModules(type: Exec, group: 'Angular') {
    commandLine 'docker', 'run', '-u', (getDockerUserId() + ":" + getDockerGroupId()), '--rm', '-v',
        getDockerMappingFolder(), 'trion/ng-cli', 'npm', 'install'
}

task updateAngular(type: Exec, group: 'Angular') {
    commandLine 'docker', 'run', '-u', (getDockerUserId() + ":" + getDockerGroupId()), '--rm', '-v',
        getDockerMappingFolder(), 'trion/ng-cli', 'ng', 'update', '--all'
}

task buildAngular(type: Exec, group: 'Build') {
    ignoreExitValue true
   
    commandLine 'docker', 'run', '-u', (getDockerUserId() + ":" + getDockerGroupId()), '--rm', '-v',
        getDockerMappingFolder(), 'trion/ng-cli', 'ng', 'build', '--configuration=' + System.getProperty("angular.env", "local")
    
    doLast {
        print "Exit code was $execResult.exitValue"
    }
}

task debug(type: Exec, group: 'Application', description: 'Debug front-end') {
    commandLine 'docker', 'run', '-u', (getDockerUserId() + ":" + getDockerGroupId()), '--rm', '-p', '4200:4200', '-v',
        getDockerMappingFolder(), 'trion/ng-cli',  'ng', 'serve'
}

static def getDockerUserId() {
    return System.getProperty("docker.user.id", "1000")
}

static def getDockerGroupId() {
    return System.getProperty("docker.group.id", "1000")
}

sourceSets {
    main {
        java {
            srcDirs 'src'
        }
    }
}

tasks.installNodeModules.dependsOn pullAngularCliImage
tasks.buildAngular.dependsOn installNodeModules
tasks.classes.dependsOn buildAngular

def getDockerMappingFolder() {
    return project.projectDir.path + ":/app"
}
